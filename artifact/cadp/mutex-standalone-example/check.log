
svl clean info: [temporary] svl001_formula_inline

svl clean info: [persistent] diag.bcg

svl clean info: [temporary] svl001_formula_inline.mcl

svl clean info: [temporary] svl001_formula_inline.xm

"svl001_formula_inline.mcl" =
    macro is_in (t, f) =
      index(f, concat(concat(":", string(t)), ":")) <> 0
    end_macro
    < true* . { STEP ... ?F:String } > < { STEP ?tid:nat ... where is_in(tid, F) } > @

"diag.bcg" = verify "svl001_formula_inline.mcl" in "out.bcg"

svl clean info: [temporary] svl000_output.bcg

svl clean info: [temporary] evaluator4

svl clean info: [temporary] evaluator4.o

% bcg_open   "out.bcg"  evaluator4 -source "check.svl:0" -dfs -diag "svl000_output.bcg"  "svl001_formula_inline.mcl"

svl clean info: [temporary] svl000_stdout
bcg_open: using ``/usr/local/google/home/hevrard/work/cadp/bin.x64/evaluator4.a''
bcg_open: running ``evaluator4 -source check.svl:0 -dfs -diag svl000_output.bcg svl001_formula_inline.mcl'' for ``./out.bcg''

TRUE
(consult diagnostic in file ``svl000_output.bcg'')
command exit with status 0

% bcg_io   "svl000_output.bcg"   "diag.bcg"
command exit with status 0

